<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://sus-admin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://sus-admin.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-29T13:41:12+00:00</updated><id>https://sus-admin.github.io/feed.xml</id><title type="html">Shane Logan</title><subtitle>various detailed technical procedures. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Cobbler 3.3.6 Beginner’s Guide</title><link href="https://sus-admin.github.io/blog/2024/Cobbler-3.3.6-Beginners-Guide/" rel="alternate" type="text/html" title="Cobbler 3.3.6 Beginner’s Guide"/><published>2024-10-16T00:00:00+00:00</published><updated>2024-10-16T00:00:00+00:00</updated><id>https://sus-admin.github.io/blog/2024/Cobbler-3.3.6-Beginners-Guide</id><content type="html" xml:base="https://sus-admin.github.io/blog/2024/Cobbler-3.3.6-Beginners-Guide/"><![CDATA[<p>This guide is intended to accompany and extend the official Cobbler <a href="https://cobbler.readthedocs.io/en/v3.3.6/installation-guide.html">Installation</a> and <a href="https://cobbler.readthedocs.io/en/v3.3.6/quickstart-guide.html">Quick Start</a> guides.</p> <p>Cobbler is an open-source, system deployment and provisioning software which can simplify and automate operating system installations over the network, as well as rudimentary configuration and patch management capabilities and some other features too. It is a modular solution for deploying systems via PXE, where you would normally have to setup and maintain your own DHCP, TFTP and HTTP servers to provide the full PXE boot+install functionality, Cobbler abstracts all (or some) of those services and manages them for you. Cobbler was initially developed at Red Had and is best suited to deploy Red Hat Linux flavors, like Fedora, but it is fairly capable of deploying just about anything, albeit sometimes requiring some advanced customizations.</p> <h2 class="no_toc" id="table-of-contents">Table of Contents</h2> <ol id="markdown-toc"> <li><a href="#objective" id="markdown-toc-objective"><strong>Objective</strong></a></li> <li><a href="#environment" id="markdown-toc-environment"><strong>Environment</strong></a></li> <li><a href="#fedora-server-basics" id="markdown-toc-fedora-server-basics"><strong>Fedora Server Basics</strong></a> <ol> <li><a href="#updating" id="markdown-toc-updating"><strong>Updating</strong></a></li> <li><a href="#customizing" id="markdown-toc-customizing"><strong>customizing</strong></a></li> </ol> </li> <li><a href="#cobbler-basics" id="markdown-toc-cobbler-basics"><strong>Cobbler Basics</strong></a> <ol> <li><a href="#dependencies" id="markdown-toc-dependencies"><strong>Dependencies</strong></a></li> <li><a href="#installation" id="markdown-toc-installation"><strong>Installation</strong></a></li> <li><a href="#configuration" id="markdown-toc-configuration"><strong>Configuration</strong></a></li> </ol> </li> <li><a href="#fedora-34-pxe-deployment" id="markdown-toc-fedora-34-pxe-deployment"><strong>Fedora 34 PXE Deployment</strong></a></li> <li><a href="#fedora-37-pxe-deployment" id="markdown-toc-fedora-37-pxe-deployment"><strong>Fedora 37 PXE Deployment</strong></a></li> <li><a href="#security-hardening" id="markdown-toc-security-hardening"><strong>Security Hardening</strong></a> <ol> <li><a href="#selinux" id="markdown-toc-selinux"><strong>SELinux</strong></a> <ol> <li><a href="#enabling-selinux" id="markdown-toc-enabling-selinux"><strong>Enabling SELinux</strong></a></li> <li><a href="#enforcing-selinux" id="markdown-toc-enforcing-selinux"><strong>Enforcing SELinux</strong></a></li> <li><a href="#cobbler-selinux-config" id="markdown-toc-cobbler-selinux-config"><strong>Cobbler SELinux Config</strong></a></li> </ol> </li> <li><a href="#network-isolation" id="markdown-toc-network-isolation"><strong>Network Isolation</strong></a> <ol> <li><a href="#firewalld" id="markdown-toc-firewalld"><strong>Firewalld</strong></a></li> <li><a href="#service-confinement" id="markdown-toc-service-confinement"><strong>Service confinement</strong></a></li> </ol> </li> </ol> </li> <li><a href="#tips--troubleshooting" id="markdown-toc-tips--troubleshooting"><strong>Tips &amp; Troubleshooting</strong></a></li> </ol> <h2 id="objective"><strong>Objective</strong></h2> <p>Starting with a fresh installation of Fedora 34 Server (or Workstation - <a href="https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/34/Server/x86_64/iso/">Fedora download archive</a>), this guide will detail preparing the system for Cobbler v3.3.6 installation from source, including prerequisite/dependency installations and network setup, and then provide all necessary steps to install and configure Cobbler to automatically provision another LAN host with Fedora 34 or 37 Server through PXE network boot.</p> <h2 id="environment"><strong>Environment</strong></h2> <p>This guide assumes that both the <strong>Cobbler Server</strong> and <strong>PXE Clinet(s)</strong> are running as <strong>virtual machines (VMs)</strong> under the same <strong>Oracle VM VitualBox</strong> <em>(Windows 10)</em> host</p> <ul> <li> <p>The <strong>Cobbler server VM</strong> is configured with the following system specs:</p> <ul> <li> <p><strong>BIOS or UEFI firmware</strong></p> </li> <li> <p><strong>64 GB HDD</strong></p> </li> <li> <p><strong>4 GB RAM</strong></p> </li> <li> <p><strong>2 vCPUs</strong></p> </li> <li> <p><strong>2 virtual network adapters.</strong></p> <ol> <li> <p>VirtualBox VM <strong><em>Bridged Adapter</em></strong> connected to the primary physical NIC on the Windows host so that SSH to the Cobbler server will be more accessible.</p> </li> <li> <p>VirtualBox VM <strong><em>Internal Network</em></strong> adapter named <strong><em>“cobbler”</em></strong> which will have no external network connectivity (closed LAN; no internet access).</p> </li> </ol> </li> </ul> </li> <li> <p>The <strong>PXE client VM</strong> <em>(the target for network installations)</em> has the following specs:</p> <ul> <li> <p><strong>BIOS or UEFI firmware</strong> with the following boot order <em>(See</em> <strong><em>Tips &amp; Troubleshooting</em></strong> <em>section below for more info)</em>:</p> <ol> <li> <p>Hard Drive</p> </li> <li> <p>Network</p> </li> </ol> </li> <li> <p><strong>32 GB HDD</strong></p> </li> <li> <p><strong>4 GB RAM</strong></p> </li> <li> <p><strong>2 vCPUs</strong></p> </li> <li> <p><strong>1 virtual network adapter</strong> which is connected to the same <strong><em>“cobbler”</em></strong> VirtualBox adapter described above.</p> </li> </ul> </li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <h3><b>Physical Network Diagram</b></h3> <figure> <picture> <img src="/assets/img/Cobbler-3.3.6-Beginners_Physical.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> The Cobbler server and PXE client(s) are not shown here, as they are VMs, not physical workstations. </div> </div> <div class="col-sm mt-3 mt-md-0"> <h3><span style="float:right;"><b>Logical Network Diagram</b></span></h3> <figure> <picture> <img src="/assets/img/Cobbler-3.3.6-Beginners_Logical.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> The VirtualBox host (my Windows 10 laptop) is only shown for completeness, it is not used in the procedures other than the VM settings described above. </div> </div> </div> <p><em>This exact configuration is not a strict requirement for deploying systems through Cobbler, but results may vary on different hardware. It also proves that a local network PXE client is able to boot and install an operating system without public internet connectivity, using only the resources immediately available on the VM and the Cobbler server.</em></p> <h2 id="fedora-server-basics"><strong>Fedora Server Basics</strong></h2> <p>As stated above, this document outlines the procedures necessary to install and configure Cobbler v3.3.6 on a Fedora 34 host server for local network installations/provisioning through PXE. Additionally, necessary adjustments will be made for security through <strong>selinux</strong> and <strong>firewalld</strong> on the Cobbler server. As such, it is recommended to keep things simple and <strong>limit the number of additional applications installed</strong> to the Cobbler server to <strong>minimize unexpected firewall and selinux complications.</strong></p> <h3 id="updating"><strong>Updating</strong></h3> <p>If Cobbler is to be installed on a Fedora 34 <em>Server</em> host, and automatic partitioning was used during initial OS installation, be sure to extend the LVM Logical Volme to a more usable capacity (recommended 95%):</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lvextend /dev/mapper/fedora_<span class="nv">$HOSTNAME</span><span class="nt">-root</span> <span class="nt">-l</span>+95%FREE <span class="nt">-r</span>
</code></pre></div></div> <p>Update the Fedora 34 host with the latest YUM repo updates:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum update
</code></pre></div></div> <p>Install <strong>VirtualBox VM Guest Additions</strong>, either from the YUM repos, or the Guest Adds. CD included with VirtualBox Manager <em>(YUM method is shown below, but VirtualBox usually recommends using the Guest Adds. CD)</em>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>virtualbox-guest-additions
</code></pre></div></div> <h3 id="customizing"><strong>customizing</strong></h3> <p>Install your preferred Linux sys admin tools and configure some convenient bash settings, for example <em>(PS1 variable controls bash shell prompt)</em>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl <span class="nb">enable</span> <span class="nt">--now</span> ssh
yum <span class="nb">install </span>neovim fzf tmux htop net-tools tftp
<span class="o">[</span> <span class="nt">-e</span> ~/.bash_profile <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s1">'export PS1="\[\e[1;32m\][\u@\h \W]\$ \[\e[0m\]"'</span> | <span class="nb">tee</span> <span class="nt">-a</span> ~/.bash_profile <span class="o">||</span> <span class="nb">echo</span> <span class="s1">'export PS1="\[\e[1;32m\][\u@\h \W]\$ \[\e[0m\]"'</span> | <span class="nb">tee</span> <span class="nt">-a</span> ~/.bashrc
</code></pre></div></div> <p>SELinux and firewalld will be configured after Cobbler has been tested successfully, disable them for now.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-E</span> <span class="s2">"s/SELINUX=(disabled|enforcing)/SELINUX=permissive/"</span> /etc/selinux/config
setenforce permissive
</code></pre></div></div> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl disable <span class="nt">--now</span> firewalld
</code></pre></div></div> <h2 id="cobbler-basics"><strong>Cobbler Basics</strong></h2> <blockquote> <p>Now would be a good time to power off the Cobbler server to take a VM snapshot.</p> </blockquote> <h3 id="dependencies"><strong>Dependencies</strong></h3> <p>Download the Fedora 34 &amp; 37 <strong>Server</strong> installation media (.iso files):</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span> <span class="nt">-d</span> ~/Downloads <span class="o">]</span> <span class="o">||</span> <span class="nb">mkdir</span> ~/Downloads
<span class="nb">cd</span> ~/Downloads <span class="o">&amp;&amp;</span> wget https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/34/Server/x86_64/iso/Fedora-Server-dvd-x86_64-34-1.2.iso
<span class="nb">cd</span> ~/Downloads <span class="o">&amp;&amp;</span> wget https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/37/Server/x86_64/iso/Fedora-Server-dvd-x86_64-37-1.7.iso
</code></pre></div></div> <p>Install dependencies for building and installing Cobbler from Source</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>make git python3-devel python3-sphinx python3-coverage openssl httpd-devel
</code></pre></div></div> <blockquote> <p>Cobbler is also available through the YUM repos, using <code class="language-plaintext highlighter-rouge">yum install cobbler</code></p> </blockquote> <p>Download <strong>cobbler v3.3.6</strong> source code from the official GitHub repo</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="nt">-P</span>  ~/Downloads/. https://github.com/cobbler/cobbler/archive/refs/tags/v3.3.6.zip

<span class="nb">mkdir</span> <span class="nt">-p</span> /usr/src/cobbler
<span class="nb">cd</span> /usr/src/cobbler
unzip <span class="nt">-d</span> <span class="nb">.</span> ~/Downloads/v3.3.6
</code></pre></div></div> <p>Install the runtime dependencies and enable system services <em>(systemd will probably report some errors…)</em></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>httpd wget curl rsync dnf-plugins-core dosfstools createrepo_c xorriso python3-mod_wsgi python-cheetah python3-pyyaml python-netaddr python-librepo python-schema syslinux tftp-server dhcp-server pykickstart ipxe-bootimgs ipxe-roms koan mod_ssl python3-pyflakes python3-pycodestyle rpm-build python3-dns python3-file-magic python3-pymongo
systemctl <span class="nb">enable</span> <span class="nt">--now</span> httpd tftp dhcpd
</code></pre></div></div> <p>Install the GRUB bootloader and module packages so GRUB can be used as the network bootloader for PXE clients:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum <span class="nb">install </span>grub2-pc grub2-pc-modules grub2-efi-x64-modules grub2-efi-aa64-modules grub2-efi-arm-modules grub2-efi-ia32-modules grub2-emu-modules grub2-emu-modules grub2-ppc64le-modules grub2-emu
</code></pre></div></div> <h3 id="installation"><strong>Installation</strong></h3> <p>Install Cobbler</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /usr/src/cobbler/cobbler-3.3.6
make <span class="nb">install
</span>systemctl restart httpd
</code></pre></div></div> <p>Reconfigure the <strong>cobblerd</strong> daemon as described in Cobbler’s <a href="https://cobbler.readthedocs.io/en/v3.3.6/installation-guide.html#id3">official docs</a>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s,usr/bin/cobblerd,usr/local/bin/cobblerd,"</span> /etc/cobbler/cobblerd.service
<span class="nb">cp</span> /etc/cobbler/cobblerd.service /etc/systemd/system/.
systemctl daemon-reload
systemctl <span class="nb">enable </span>cobblerd
</code></pre></div></div> <h3 id="configuration"><strong>Configuration</strong></h3> <p>Reconfigure the default Cobbler settings file to match the local server:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/manage_dhcp: false/manage_dhcp: true/"</span> /etc/cobbler/settings.yaml
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/dhcp_v4: false/dhcp_v4: true/"</span> /etc/cobbler/settings.yaml
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/server: 127.0.0.1/server: 10.0.0.10/"</span> /etc/cobbler/settings.yaml
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/next_server_v4: 127.0.0.1/next_server_v4: 10.0.0.10/"</span> /etc/cobbler/settings.yaml
</code></pre></div></div> <p>Optionally, toggle some additional settings:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/pxe_just_once: true/pxe_just_once: false/"</span> /etc/cobbler/settings.yaml
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s/enable_ipxe: false/enable_ipxe: true/"</span> /etc/cobbler/settings.yaml
</code></pre></div></div> <p>Edit the subnet decaration in <strong>/etc/cobbler/dhcp.tempate</strong> to match the <strong>enp0s8</strong> interface:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>subnet 10.0.0.0 netmask 255.255.255.0 <span class="o">{</span>
     option routers             10.0.0.1<span class="p">;</span>
     option domain-name-servers 10.0.0.1<span class="p">;</span>
     option subnet-mask         255.255.255.0<span class="p">;</span>
     range dynamic-bootp        10.0.0.100 10.0.0.199<span class="p">;</span>
</code></pre></div></div> <p>Cobbler should now be able to start up and run <code class="language-plaintext highlighter-rouge">sync</code> and <code class="language-plaintext highlighter-rouge">check</code> tasks without fatal errors:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart cobblerd <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>10
cobbler <span class="nb">sync</span> <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>5
cobbler check
cobbler mkloaders
</code></pre></div></div> <p>Finally, pull the latest official Cobbler signatures</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cobbler signature update
systemctl restart cobblerd <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>5
cobbler <span class="nb">sync</span>
</code></pre></div></div> <p><strong>The Cobbler server is now ready to begin importing distros and deploying systems</strong></p> <h2 id="fedora-34-pxe-deployment"><strong>Fedora 34 PXE Deployment</strong></h2> <p>Mount the Fedora 34 Server installation media and run the <code class="language-plaintext highlighter-rouge">cobbler import</code></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> /mnt/Fedora
mount <span class="nt">-t</span> iso9660 <span class="nt">-o</span> loop,ro /home/fedora/Downloads/Fedora-Server-dvd-x86_64-34-1.2.iso /mnt/Fedora
cobbler import <span class="nt">--name</span><span class="o">=</span>Fedora34 <span class="nt">--arch</span><span class="o">=</span>x86_64 <span class="nt">--path</span><span class="o">=</span>/mnt/Fedora
</code></pre></div></div> <p>Optionally, inspect the imported Distribution and child Profile:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cobbler distro report
cobbler profile report
</code></pre></div></div> <p>Create a new generic Fedora 34 kickstart file from Cobbler’s default <code class="language-plaintext highlighter-rouge">sample.ks</code> and configure the new Cobbler Profile to use it:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> /var/lib/cobbler/templates/sample.ks | <span class="nb">grep</span> <span class="nt">-v</span> <span class="s2">"</span><span class="se">\-</span><span class="s2">-useshadow"</span> | <span class="nb">grep</span> <span class="nt">-v</span> ^install | <span class="nb">sed</span> <span class="s1">'s,selinux --disabled,selinux --permissive,'</span> | <span class="nb">sed</span> <span class="s1">'s,rootpw --iscrypted \$default_password_crypted,rootpw --iscrypted \$default_password_crypted\nuser --groups=wheel --name=fedora --password=\$default_password_crypted --iscrypted --gecos="fedora",'</span> | <span class="nb">tee</span> /var/lib/cobbler/templates/Fedora34.ks
cobbler profile edit <span class="nt">--name</span> Fedora34-x86_64 <span class="nt">--autoinstall</span> Fedora34.ks
</code></pre></div></div> <blockquote> <p>This new kickstart file has removed some options that cause fatal errors during installation, and also configures SELinux in <code class="language-plaintext highlighter-rouge">permissive</code> mode on the resulting system, as well as creating a new admin user named <code class="language-plaintext highlighter-rouge">fedora</code> which allows for immediate SSH access to the installed system.</p> </blockquote> <p>Now, create the <strong>PXE Client</strong> VM according to the specs described in the <strong>Environment</strong> section above and note down the vNIC’s MAC address.</p> <blockquote> <p>At this point, you may run the following commands on the Cobbler server, then start the <strong>PXE Client</strong> VM to test a manual installation over PXE.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart cobblerd
cobbler <span class="nb">sync</span>
</code></pre></div> </div> </blockquote> <p>Finally, create a new Cobbler System, replacing <code class="language-plaintext highlighter-rouge">aa:bb:cc:dd:ee:ff</code> with the MAC Address of the <strong>PXE Client</strong> VM created above, and sync up Cobbler:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cobbler system add <span class="nt">--name</span> Fedora34 <span class="nt">--profile</span> Fedora34-x86_64 <span class="nt">--netboot-enabled</span> <span class="nb">true</span> <span class="nt">--hostname</span> fedora34 <span class="nt">--interface</span> enp0s3 <span class="nt">--static</span> <span class="nb">true</span> <span class="nt">--mac-address</span> <span class="s2">"aa:bb:cc:dd:ee:ff"</span> <span class="nt">--ip-address</span> 10.0.0.11 <span class="nt">--gateway</span> 10.0.0.1 <span class="nt">--netmask</span> 255.255.255.0 <span class="nt">--name-servers</span> <span class="s2">"10.0.0.1"</span>
systemctl restart cobblerd <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>10
cobbler <span class="nb">sync</span>
</code></pre></div></div> <p>The <strong>PXE Client</strong> VM can now be powered on, and should automatically boot to PXE and install Fedora 34 to the VM HDD using the “Fedora34.ks” kickstart file created above.</p> <blockquote> <p>The newly installed system will have the password “cobbler” for both users “root” and “fedora” which is configurable through the <code class="language-plaintext highlighter-rouge">default_password_crypted</code> setting in <code class="language-plaintext highlighter-rouge">/etc/cobbler/settings.yaml</code> as well as the kickstart file created above.</p> </blockquote> <h2 id="fedora-37-pxe-deployment"><strong>Fedora 37 PXE Deployment</strong></h2> <p>Take similar steps as above to import and autoinstall Fedora 37 Server</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mount <span class="nt">-t</span> iso9660 <span class="nt">-o</span> loop,ro /home/fedora/Downloads/Fedora-Server-dvd-x86_64-37-1.7.iso /mnt/Fedora
cobbler import <span class="nt">--name</span><span class="o">=</span>Fedora37 <span class="nt">--arch</span><span class="o">=</span>x86_64 <span class="nt">--path</span><span class="o">=</span>/mnt/Fedora
cobbler distro edit <span class="nt">--name</span> Fedora37-x86_64 <span class="nt">--kernel-options</span> <span class="s2">""</span>
<span class="nb">cat</span> /var/lib/cobbler/templates/sample.ks | <span class="nb">grep</span> <span class="nt">-v</span> <span class="s2">"</span><span class="se">\-</span><span class="s2">-useshadow"</span> | <span class="nb">grep</span> <span class="nt">-v</span> ^install | <span class="nb">sed</span> <span class="s1">'s,selinux --disabled,selinux --permissive,'</span> | <span class="nb">sed</span> <span class="s1">'s,rootpw --iscrypted \$default_password_crypted,rootpw --iscrypted \$default_password_crypted\nuser --groups=wheel --name=fedora --password=\$default_password_crypted --iscrypted --gecos="fedora",'</span> | <span class="nb">tee</span> /var/lib/cobbler/templates/Fedora37.ks
cobbler profile edit <span class="nt">--name</span> Fedora37-x86_64 <span class="nt">--autoinstall</span> Fedora37.ks
cobbler system add <span class="nt">--name</span> Fedora37 <span class="nt">--profile</span> Fedora37-x86_64 <span class="nt">--netboot-enabled</span> <span class="nb">true</span> <span class="nt">--hostname</span> fedora37 <span class="nt">--interface</span> enp0s3 <span class="nt">--static</span> <span class="nb">true</span> <span class="nt">--mac-address</span> <span class="s2">"aa:bb:cc:dd:ee:ff"</span> <span class="nt">--ip-address</span> 10.0.0.12 <span class="nt">--gateway</span> 10.0.0.1 <span class="nt">--netmask</span> 255.255.255.0 <span class="nt">--name-servers</span> <span class="s2">"10.0.0.1"</span>
systemctl restart cobblerd <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>10
cobbler <span class="nb">sync</span>
</code></pre></div></div> <h2 id="security-hardening"><strong>Security Hardening</strong></h2> <p>SELinux and firewall operations can seem daunting at first, especially with an application as complex as Cobbler, but the basic configurations here are relatively simple.</p> <blockquote> <p>It is possible to lock yourself out of your Linux server with SELinux, so now would be another good time to take a VM snapshot.</p> </blockquote> <h3 id="selinux"><strong>SELinux</strong></h3> <p>SELinux should come enabled by default on a fresh Fedora 34 Server installation, and we set it to <code class="language-plaintext highlighter-rouge">permissive</code> in the <strong>Base Updates and Configs</strong> section above, but sometimes <code class="language-plaintext highlighter-rouge">selinux</code> can be disabled on the kernel command line</p> <p>If <code class="language-plaintext highlighter-rouge">selinux=0</code> is set in the <code class="language-plaintext highlighter-rouge">/proc/cmdline</code> file, then follow the instructions found in the <code class="language-plaintext highlighter-rouge">/etc/selinux/config</code> file for the <code class="language-plaintext highlighter-rouge">grubby</code> command to enable selinux at boot time. The kernel command line parameters will take precedence over the other configurations.</p> <p>If the output of the <code class="language-plaintext highlighter-rouge">getenforce</code> command is already <code class="language-plaintext highlighter-rouge">permissive</code> skip to the <strong>Enforcing SELinux</strong> section below; if it is <code class="language-plaintext highlighter-rouge">enforcing</code> skip to the <strong>Cobbler SELinux Config</strong> section.</p> <h4 id="enabling-selinux"><strong>Enabling SELinux</strong></h4> <p>If SELinux was disabled at the kernel command line or in the <code class="language-plaintext highlighter-rouge">/etc/selinux/config</code> file, be sure to create the <code class="language-plaintext highlighter-rouge">.autorelabel</code> file at the root of the filesystem, and set SELINUX mode to <code class="language-plaintext highlighter-rouge">permissive</code> and <strong>NOT</strong> <code class="language-plaintext highlighter-rouge">enforcing</code> in the <code class="language-plaintext highlighter-rouge">/etc/selinux/config</code> file.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="nt">-E</span> <span class="s2">"s/SELINUX=(disabled|enforcing)/SELINUX=permissive/"</span> /etc/selinux/config
<span class="nb">touch</span> /.autorelabel
</code></pre></div></div> <p>With selinux enabled at the kernel command line and set to permissive in “/etc/selinux/config” <strong>reboot the Fedora 34 Cobbler server</strong> and observe the filesystem relabel as the system boots.</p> <blockquote> <p>The local filesystem maintains no security context labels when SELinux is disbled, so rebooting directly to SELinux <code class="language-plaintext highlighter-rouge">enforcing</code> mode will prevent the system from booting properly.</p> </blockquote> <h4 id="enforcing-selinux"><strong>Enforcing SELinux</strong></h4> <p>Change the active runtime and boot state/mode of SELinux to <code class="language-plaintext highlighter-rouge">enforcing</code>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setenforce enforcing

<span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/SELINUX=permissive/SELINUX=enforcing/'</span> /etc/selinux/config
</code></pre></div></div> <h4 id="cobbler-selinux-config"><strong>Cobbler SELinux Config</strong></h4> <p>WIth SELinux operating in <code class="language-plaintext highlighter-rouge">enforcing</code> mode, enable the necessary SELinux Booleans which will allow for basic operation of Cobbler:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setsebool <span class="nt">-P</span> cobbler_can_network_connect 1
setsebool <span class="nt">-P</span> httpd_can_network_connect_cobbler 1
setsebool <span class="nt">-P</span> httpd_serve_cobbler_files 1
</code></pre></div></div> <p>With SELinux enabled, some files generated/copied/moved by Cobbler will not retain the correct security context labels necessary for proper operation. Create a Cobbler <strong>sync-trigger</strong> to correct the SELinux labels upon any and all successful completions of a <code class="language-plaintext highlighter-rouge">cobbler sync</code> task.</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'#!/bin/bash
restorecon -R /var/lib/tftpboot
restorecon -R /var/www/cobbler'</span> | <span class="nb">tee</span> /var/lib/cobbler/triggers/sync/post/zzz-selinux-restorecon

<span class="nb">chmod </span>u+x /var/lib/cobbler/triggers/sync/post/zzz-selinux-restorecon
</code></pre></div></div> <p>issue another <code class="language-plaintext highlighter-rouge">cobbler sync</code> to check for errors <em>(should show</em> <strong><em>*** TASK COMPLETE ***</em></strong><em>)</em>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl restart cobblerd <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>10
cobbler <span class="nb">sync</span>
</code></pre></div></div> <blockquote> <p>Cobbler Triggers will run at different times depending on which directory they are placed in, and in alphabetical order within that directory. This sync-trigger specifically should typically be run after ALL sync tasks/triggers are completed</p> <blockquote> <p>Additionally, if there is an error with a <code class="language-plaintext highlighter-rouge">cobbler sync</code> task (trigger, or otherwise) before reaching this trigger, the sync task will terminate, and the trigger will not run, causing Cobbler files to not be relabeled appropriately… however, there are likely bigger issues at hand if the <code class="language-plaintext highlighter-rouge">cobbler sync</code> task is erroring out.</p> </blockquote> <p>More info on <a href="https://cobbler.readthedocs.io/en/v3.3.6/user-guide.html#triggers">Cobbler Triggers</a></p> </blockquote> <h3 id="network-isolation"><strong>Network Isolation</strong></h3> <p>reduce network exposure with <strong>firewalld</strong> and secure service/daemon settings</p> <h4 id="firewalld"><strong>Firewalld</strong></h4> <p>Firewalld is the default firewall installed on Fedora and most Red Hat distros, verify that it is enabled and running:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl <span class="nb">enable</span> <span class="nt">--now</span> firewalld
</code></pre></div></div> <p>As described above, this Cobbler server has 2 ethernet NICs: <strong>enp0s3</strong> &amp; <strong>enp0s8</strong></p> <ul> <li> <p><strong>enp0s3</strong> being the <em>upstream</em> interface which can access the internet</p> </li> <li> <p><strong>enp0s8</strong> being the <em>downstream</em> interface which will server the PXE clients</p> </li> </ul> <p>Create a new <strong>firewalld</strong> <strong><em>zone</em></strong> which <strong>enp0s8</strong> will operate in:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firewall-cmd <span class="nt">--permanent</span> <span class="nt">--new-zone</span><span class="o">=</span>cobbler
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>cobbler <span class="nt">--set-target</span><span class="o">=</span>DROP
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>cobbler <span class="nt">--add-service</span><span class="o">=</span>ssh
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>cobbler <span class="nt">--add-service</span><span class="o">=</span>tftp
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>cobbler <span class="nt">--add-service</span><span class="o">=</span>http
firewall-cmd <span class="nt">--permanent</span> <span class="nt">--zone</span><span class="o">=</span>cobbler <span class="nt">--add-service</span><span class="o">=</span>https
firewall-cmd <span class="nt">--reload</span>
</code></pre></div></div> <blockquote> <p>Linux ISC DHCP server opens a raw UDP socket with the Linux kernel, bypassing the firewalld rules, so it is not necessary to allow the service/port. Be sure the resulting <code class="language-plaintext highlighter-rouge">/etc/dhcp/dhcpd.conf</code> file is only configured for the desired interface(s) for hosting DHCP.</p> <ul> <li><a href="https://serverfault.com/questions/191390/iptables-and-dhcp-questions/">serverfault</a> &amp; <a href="https://unix.stackexchange.com/questions/447440/ufw-iptables-not-blocking-dhcp-udp-port-67">stackexchange</a> sources.</li> </ul> </blockquote> <p>Reconfigure <strong>enp0s8</strong> to operate in the <strong>new firewalld zone</strong></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmcli con mod enp0s8 connection.zone cobbler
</code></pre></div></div> <blockquote> <p>As defined above, this zone will NOT permit inbound ICMP traffic like ping</p> </blockquote> <p>For simplicity, <strong>enp0s3</strong> can be left in the <strong>default firewalld zone</strong> (verify the current active zones with <code class="language-plaintext highlighter-rouge">firewall-cmd --get-active-zones</code>)</p> <h4 id="service-confinement"><strong>Service confinement</strong></h4> <p>On the topic of network security, we should also restrict our Cobbler services to only listen on the PXE server interface.</p> <ul> <li>configure HTTP to only listen on the PXE server interface:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s,^Listen.*,Listen 10.0.0.10:80,'</span> /etc/httpd/conf/httpd.conf
</code></pre></div></div> <ul> <li>Create a local systemd service for tftpd, modifiedying the original config to only listen on a specific IP address:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl stop tftp.service
systemctl stop tftp.socket

<span class="nb">cp</span> /lib/systemd/system/tftp.service /etc/systemd/system/.
<span class="nb">sed</span> <span class="s1">'s,ListenDatagram=69,ListenDatagram=10.0.0.10:69,'</span> /lib/systemd/system/tftp.socket | <span class="nb">tee</span> /etc/systemd/system/tftp.socket
</code></pre></div></div> <ul> <li>now, reload the systemd configuration and restart services</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl daemon-reload
systemctl restart tftp httpd
</code></pre></div></div> <blockquote> <p>Feel free to comment with additional security hardening measures you would employ.</p> </blockquote> <h2 id="tips--troubleshooting"><strong>Tips &amp; Troubleshooting</strong></h2> <ol> <li> <p>Cobbler’s <a href="https://cobbler.readthedocs.io/en/v3.3.6/installation-guide.html#id2">official docs</a> advise that installing and running Cobbler in a virtual environment is not possible, but I have had no issues related to virtualization.</p> </li> <li> <p>Some dependencies are missing from the official <a href="https://cobbler.readthedocs.io/en/v3.3.6/installation-guide.html#packages">Cobbler docs</a>. Have a look at the <a href="https://github.com/cobbler/cobbler/blob/v3.3.6/docker/rpms/Fedora_34/Fedora34.dockerfile">dockerfile</a> located in cobbler’s source code for a more complete list.</p> </li> <li> <p>It’s always a good idea to manually install the desired distro (Fedora 34 or 37 Server in the case of this guide) to the desired hardware (VirtualBox VM in this case) before attempting a network installation, to validate compatability.</p> <ul> <li> <p>Any Fedora installation, whether installed manually or automatically, should always contain the file <code class="language-plaintext highlighter-rouge">anaconda-ks.cfg</code> in the <code class="language-plaintext highlighter-rouge">/root</code> directory, which is the kickstart file used to install that particular system.</p> </li> <li> <p>Depending on your deployed system of choice (Fedora 34 or 37 Server here) if you are having issues, you may want to familiarize yourself with the installation system environment.</p> <ol> <li> <p>With most distributions, while the installer is progressing and outputing logs to the monitor, you can press <strong>ALT+F2</strong> or <strong>ALT+F3</strong> or a similar key combo to access a privileged shell to troubleshoot errors</p> </li> <li> <p>some commands you may want to try on the installer system include:</p> <ul> <li> <p><code class="language-plaintext highlighter-rouge">dmesg</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">cat /proc/cmdline</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">less /var/log/syslog</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">mount</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">ls -la</code></p> <ul> <li> <p><code class="language-plaintext highlighter-rouge">ls -la /tmp</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">ls -la /</code></p> </li> </ul> </li> <li> <p><code class="language-plaintext highlighter-rouge">cpuinfo</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">lsblk</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">lsmod</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">uname -a</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">cat /etc/os-release</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">lsb_release -a</code></p> </li> <li> <p><code class="language-plaintext highlighter-rouge">echo $SHELL</code></p> </li> </ul> </li> </ol> </li> </ul> </li> <li> <p>The PXE client software that comes with VirtualBox VM firmware <strong>DOES NOT</strong> support HTTP as a download protocol, so it may be best to leave iPXE disabled in <code class="language-plaintext highlighter-rouge">/etc/cobbler/settings.yaml</code></p> <ul> <li>HTTP can always be utilized if you boot the PXE client from CD using the latest <a href="https://boot.ipxe.org/ipxe.iso">ipxe.iso</a></li> </ul> </li> <li> <p>If using <strong>BIOS firmware</strong> for the PXE client VM, the Cobbler server’s DHCP service may not provide the right bootloader (<code class="language-plaintext highlighter-rouge">filename</code> variable in <code class="language-plaintext highlighter-rouge">/etc/dhcp/dhcpd.conf</code> file)</p> <ol> <li> <p>manually set the bootloader for a Cobbler Profile or System with the following command (the <code class="language-plaintext highlighter-rouge">filename</code> value is a path to the desired bootloader file relative to the tftp root directory: <code class="language-plaintext highlighter-rouge">/var/lib/tftpboot</code>)</p> <ul> <li> <p><code class="language-plaintext highlighter-rouge">cobbler &lt;profile|system&gt; edit --name &lt;name&gt; --filename grub/grub.0</code></p> </li> <li> <p>This will also override any other DHCP configured <code class="language-plaintext highlighter-rouge">filename</code> value for a target System, which can fix individual systems that cannot boot iPXE over HTTP (or just use the <code class="language-plaintext highlighter-rouge">cobbler &lt;profile|system&gt; edit --name &lt;name&gt; --enable-ipxe false</code> command to manage individual Profile or System bootloader options).</p> </li> </ul> </li> <li> <p>The PXE client software that comes with VirtualBox VM <strong>BIOS &amp; EFI</strong> firmware <strong>DOES NOT</strong> support HTTP as a download protocol, so it may be best to leave iPXE disabled in <code class="language-plaintext highlighter-rouge">/etc/cobbler/settings.yaml</code></p> <ul> <li>HTTP can always be utilized if you boot the PXE client from CD using the latest <a href="https://boot.ipxe.org/ipxe.iso">ipxe.iso</a></li> </ul> </li> </ol> </li> <li> <p>The autoinstall template files “Fedora34.ks” “Fedora37.ks” &amp; “sample.ks” located in <code class="language-plaintext highlighter-rouge">/var/lib/cobbler/templates</code> are used to dynamically generate the specific kickstart files for either a Cobbler Profile or System at the time of installation</p> <ol> <li> <p>These templates use variables local to the Cobbler server to compose a specific configuration for the desired installation, but you can always craft an explicit kickstart file (without variables or snippets) manually and copy it to the same <code class="language-plaintext highlighter-rouge">/var/lib/cobbler/templates</code> directory and assign a Cobbler Profile or System to use that specific file with the command: <code class="language-plaintext highlighter-rouge">cobbler &lt;profile|system&gt; edit --name &lt;name&gt; --autoinstall &lt;file&gt;</code> <strong>just be sure to escape any dollar-signs ($) with back-slashes (\), otherwise they may be interpretted as variables by Cobbler</strong></p> </li> <li> <p>There are several template files and accompanying snippets that come default with Cobbler which you can look at if you have any questions about how the Cobbler templates <em>(Python Cheetah templates)</em> work. Located in <code class="language-plaintext highlighter-rouge">/var/lib/cobbler/templates</code> &amp; <code class="language-plaintext highlighter-rouge">/var/lib/cobbler/snippets</code></p> </li> </ol> </li> <li> <p>Optionally, remove the deprecated <strong><em>“tree”</em></strong> option from the Cobbler Distro <code class="language-plaintext highlighter-rouge">kernel-options</code> which can be used in the kickstart file instead. This option will be ignored anyway by the installer.</p> <ul> <li> <p><code class="language-plaintext highlighter-rouge">cobbler distro edit --name Fedora34-x86_64 --kernel-options</code></p> </li> <li> <p>cobbler still appropriately sets the “inst.repo” kernel-option in the GRUB or PXE kernel-options <em>(in <code class="language-plaintext highlighter-rouge">/var/lib/tftpboot/grub/x86_64_menu_items.cfg</code> &amp; <code class="language-plaintext highlighter-rouge">/var/lib/tftpboot/pxelinux.cfg/default</code>)</em>. This is likey managed by the Cobbler Profile’s <strong><em>“tree”</em></strong> variable <em>(seen with <code class="language-plaintext highlighter-rouge">cobbler profile report</code> above)</em> or the Profile’s config file in <code class="language-plaintext highlighter-rouge">/var/www/cobbler/distro_mirror/config</code> directory</p> </li> </ul> </li> </ol> <p><strong>here are some helpful troubleshooting commands on the Cobbler server</strong></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>man cobbler
man dhcpd
man tftp
man httpd
man selinux
man firewalld

cobbler distro report
cobbler profile report
cobbler system report

cobbler <span class="nt">--help</span>
cobbler distro edit <span class="nt">--help</span>
cobbler profile edit <span class="nt">--help</span>
cobbler system edit <span class="nt">--help</span>

systemctl status cobblerd
systemctl status dhcpd
systemctl status tftp
systemctl status httpd

journalctl <span class="nt">-eu</span> cobblerd
journalctl <span class="nt">-eu</span> dhcpd
journalctl <span class="nt">-eu</span> tftp
journalctl <span class="nt">-eu</span> httpd

<span class="nb">cat</span> /var/log/httpd/error_log
<span class="nb">cat</span> /var/log/audit/audit.log | <span class="nb">grep </span>AVC

<span class="nb">cat</span> /etc/dhcp/dhcpd.conf

<span class="nb">cat</span> /var/lib/tftpboot/grub/x86_64_menu_items.cfg
<span class="nb">cat</span> /var/lib/tftpboot/pxelinux.cfg/default

tftp 10.0.0.10
tftp 127.0.0.1

<span class="nb">cat</span> /etc/httpd/conf/httpd.conf
<span class="nb">cat</span> /etc/httpd/conf.d/cobbler.conf
</code></pre></div></div>]]></content><author><name>Sus-Admin</name></author><category term="cobbler"/><summary type="html"><![CDATA[This guide is intended to accompany and extend the official Cobbler Installation and Quick Start guides.]]></summary></entry></feed>